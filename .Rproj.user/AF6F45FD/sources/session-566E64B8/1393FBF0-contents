# Author: Gemma Sharp
# Initial date: 2022-10-16
# Purpose: This R Script prepares data from the ABCD cohort for use in the 2022/23 dissertation projects

## The raw data, in the format downloaded from the NMH website (https://nda.nih.gov/abcd/) are stored in data/raw_data
## Because the raw data files have text at the top describing each column, they aren't in a good format to be analysed.
## As a first step, we have to remove this text at the top:

## First, I make a function (called read.and.remove.top.line) that reads a dataset into R and removes the top row (containing text)

read.and.remove.top.line <- function(filename){
  file <- paste0("data/raw_data/",filename,".txt") # set the location of the file to read
  dat <- read.delim(file) # read the file into R
  dat <- dat[-1,] # remove the top row
  dat # return the dataset
}

## Then I can apply that function to any raw data file:

setwd("~/OneDrive - University of Exeter/Dissertations/abcd_menstrual_traits/shared_2223_abcd") # First I need to set the working directory (if you try to re-run this script, you will have to update this path to point it to the correct folder on your computer)

ppdms01 <- read.and.remove.top.line("abcd_ppdms01") # parent-completed puberty questionnaire
ypdms01 <- read.and.remove.top.line("abcd_ypdms01") # YP-completed puberty questionnaire
bpm01 <- read.and.remove.top.line("abcd_bpm01")
bpmt01 <- read.and.remove.top.line("abcd_bpmt01")
cbcl01 <- read.and.remove.top.line("abcd_cbcl01")
cbcls01 <- read.and.remove.top.line("abcd_cbcls01")
ksad01 <- read.and.remove.top.line("abcd_ksad01")
ksad501 <- read.and.remove.top.line("abcd_ksad501")
mhp02 <- read.and.remove.top.line("abcd_mhp02")
mhy02 <- read.and.remove.top.line("abcd_mhy02")
eating_disorders_p01 <- read.and.remove.top.line("eating_disorders_p01")
eating_disorders01 <- read.and.remove.top.line("eating_disorders01")
generaled_anx_disorder_p01 <- read.and.remove.top.line("generaled_anx_disorder_p01")
generaled_anx_disorder01 <- read.and.remove.top.line("generaled_anx_disorder01")
social_anxiety_disorder_p01 <- read.and.remove.top.line("social_anxiety_disorder_p01")
social_anxiety_disorder01 <- read.and.remove.top.line("social_anxiety_disorder01")

## Next, we need to tidy the data a little, so that any missing values (usually coded as "" in the abcd data) are coded in a way that R understands (i.e. as NA)
## Anytime someone answers "don't know" to a question, we'll also set that to NA (usually coded as 999 in abcd)
## And anytime they decline to answer a question (usually coded as 777 in abcd), we'll also set that to NA


## First I write a function (called code.missing.values) to set all "" to NA
code.missing.values <- function(dat){
  dat[dat==""|dat==777|dat==999] <- NA # change all ""s, 777s or 999s to NAs
  dat # return the dataset
}

## Then I apply that function to all my datasets

ppdms01 <- code.missing.values(ppdms01)
ypdms01 <- code.missing.values(ypdms01)
bpmt01 <- code.missing.values(bpmt01)
bpm01 <- code.missing.values(bpm01)
cbcl01 <- code.missing.values(cbcl01)
cbcls01 <- code.missing.values(cbcls01)
ksad01 <- code.missing.values(ksad01)
ksad501 <- code.missing.values(ksad501)
mhp02 <- code.missing.values(mhp02)
mhy02 <- code.missing.values(mhy02)
eating_disorders_p01 <- code.missing.values(eating_disorders_p01)
eating_disorders01 <- code.missing.values(eating_disorders01)
eating_disorders_p01 <- code.missing.values(eating_disorders_p01)
eating_disorders01 <- code.missing.values(eating_disorders01)
generaled_anx_disorder_p01 <- code.missing.values(generaled_anx_disorder_p01)
generaled_anx_disorder01 <- code.missing.values(generaled_anx_disorder01)
social_anxiety_disorder_p01 <- code.missing.values(social_anxiety_disorder_p01)
social_anxiety_disorder01 <- code.missing.values(social_anxiety_disorder01)


## Now I can save these individual files to data/raw_data/raw_data_after_prep

write.csv(ppdms01,"data/raw_data/raw_data_after_prep/ppdms01.csv",row.names = F)
write.csv(ypdms01,"data/raw_data/raw_data_after_prep/ypdms01.csv",row.names = F)
write.csv(bpmt01,"data/raw_data/raw_data_after_prep/bpmt01.csv",row.names = F)
write.csv(bpm01,"data/raw_data/raw_data_after_prep/bpm01.csv",row.names = F)
write.csv(cbcl01,"data/raw_data/raw_data_after_prep/cbcl01.csv",row.names = F)
write.csv(cbcls01,"data/raw_data/raw_data_after_prep/cbcls01.csv",row.names = F)
write.csv(ksad01,"data/raw_data/raw_data_after_prep/ksad01.csv",row.names = F)
write.csv(ksad501,"data/raw_data/raw_data_after_prep/ksad501.csv",row.names = F)
write.csv(mhp02,"data/raw_data/raw_data_after_prep/mhp02.csv",row.names = F)
write.csv(mhy02,"data/raw_data/raw_data_after_prep/mhy02.csv",row.names = F)
write.csv(eating_disorders01,"data/raw_data/raw_data_after_prep/eating_disorders01.csv",row.names = F)
write.csv(eating_disorders_p01,"data/raw_data/raw_data_after_prep/eating_disorders_p01.csv",row.names = F)
write.csv(generaled_anx_disorder01,"data/raw_data/raw_data_after_prep/generaled_anx_disorder01.csv",row.names = F)
write.csv(generaled_anx_disorder_p01,"data/raw_data/raw_data_after_prep/generaled_anx_disorder_p01.csv",row.names = F)
write.csv(social_anxiety_disorder01,"data/raw_data/raw_data_after_prep/social_anxiety_disorder01.csv",row.names = F)
write.csv(social_anxiety_disorder_p01,"data/raw_data/raw_data_after_prep/social_anxiety_disorder_p01.csv",row.names = F)

## These datasets are all in what we call "long format", which means that each row is an observation (a participant at a particular timepoint), rather than an individual research participant.
## You can read more about long vs wide format data here: https://www.statology.org/long-vs-wide-data/
## We want to make a MERGED dataset, and we also want to make a version in WIDE format.
## Merged means that we want to merge several datasets into one - so instead of having e.g. menstrual features as described by parents in one file and menstrual features as described by YPs in another, they would all be neatly in the same dataset
## Wide means that we want each row to be a different young person in the study, with different columns for different timepoints

## We'll start by merging the parent (ppdms01) and child (ypdms01) menstrual data into the same dataset
## These datasets each contain a column called src_subject_id, which uniquely identifies each YP.
## They also contain a column called eventname, which identifies the timepoint

## First we'll merge the two files
menstrual_data <- merge(ppdms01,ypdms01,by=c("src_subject_id","eventname"),all=T)
## Then select only the columns we need:
menstrual_data <- menstrual_data[,c("src_subject_id","eventname",
                     "interview_age.x","sex.x",names(menstrual_data)[grep(names(menstrual_data),pattern="menstrual")])]
## rename sex.x and interview_age.x to sex and interview_age:
menstrual_data$sex <- menstrual_data$sex.x
menstrual_data$interview_age <- menstrual_data$interview_age.x
menstrual_data$sex.x <- NULL
menstrual_data$interview_age.x <-NULL
## And make eventname shorter so it's easier to work with:
menstrual_data$eventname <- as.character(factor(menstrual_data$eventname, levels = sort(unique(menstrual_data$eventname)), labels = c(1,2,3,0)))
## We can save this now:
write.csv(menstrual_data,"data/raw_data/raw_data_after_prep/menstrual_data_long.csv",row.names = F)

## Now we can put the data into wide format
menstrual_data_wide <- reshape(menstrual_data,idvar = "src_subject_id",timevar = "eventname",direction = "wide")
## remove duplicate sex columns
menstrual_data_wide$sex <- menstrual_data_wide$sex.0
menstrual_data_wide[,c("sex.0","sex.1","sex.2","sex.3")] <- NULL
## Save
write.csv(menstrual_data_wide,"data/raw_data/raw_data_after_prep/menstrual_data_wide.csv",row.names = F)







